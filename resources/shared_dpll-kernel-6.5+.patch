From 5622ec33c2455d96d6695b1a8834ccc1b6a523f3 Mon Sep 17 00:00:00 2001
From: Satyeshwar Singh <satyeshwar.singh@intel.com>
Date: Mon, 6 May 2024 19:54:16 -0700
Subject: [PATCH 1/1] dpll: Provide a command line param to config if PLLs can
 be shared

By default, PLLs can be shared between CRTCs to conserve power if their
HW states match. However, there are circumstances like in SW genlock
case where we want PLLs to not be shared so that individual CRTC vsyncs
can be synchronized. This patch provides a command line flag called
share_dplls through which the user can decide if they want to share
dplls between multiple CRTCs or not. By default, it is set to true so
that there is no change in past behavior if this flag is not
provided.

Signed-off-by: Satyeshwar Singh <satyeshwar.singh@intel.com>
---
 drivers/gpu/drm/i915/display/intel_dpll_mgr.c | 8 +++++++-
 drivers/gpu/drm/i915/i915_params.c            | 3 +++
 drivers/gpu/drm/i915/i915_params.h            | 1 +
 3 files changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/display/intel_dpll_mgr.c b/drivers/gpu/drm/i915/display/intel_dpll_mgr.c
index 64dd603dc69a..c7644aabda5e 100644
--- a/drivers/gpu/drm/i915/display/intel_dpll_mgr.c
+++ b/drivers/gpu/drm/i915/display/intel_dpll_mgr.c
@@ -331,11 +331,17 @@ intel_find_shared_dpll(struct intel_atomic_state *state,
 	struct intel_shared_dpll *pll, *unused_pll = NULL;
 	struct intel_shared_dpll_state *shared_dpll;
 	enum intel_dpll_id i;
+	int total_plls = 0;
 
 	shared_dpll = intel_atomic_get_shared_dpll_state(&state->base);
 
 	drm_WARN_ON(&dev_priv->drm, dpll_mask & ~(BIT(I915_NUM_PLLS) - 1));
 
+	for_each_set_bit(i, &dpll_mask, I915_NUM_PLLS) {
+		pll = &dev_priv->display.dpll.shared_dplls[i];
+		total_plls++;
+	}
+
 	for_each_set_bit(i, &dpll_mask, I915_NUM_PLLS) {
 		pll = &dev_priv->display.dpll.shared_dplls[i];
 
@@ -346,7 +352,7 @@ intel_find_shared_dpll(struct intel_atomic_state *state,
 			continue;
 		}
 
-		if (memcmp(pll_state,
+		if ((dev_priv->params.share_dplls || total_plls == 1) && memcmp(pll_state,
 			   &shared_dpll[i].hw_state,
 			   sizeof(*pll_state)) == 0) {
 			drm_dbg_kms(&dev_priv->drm,
diff --git a/drivers/gpu/drm/i915/i915_params.c b/drivers/gpu/drm/i915/i915_params.c
index d1e4d528cb17..e7b9da6b8232 100644
--- a/drivers/gpu/drm/i915/i915_params.c
+++ b/drivers/gpu/drm/i915/i915_params.c
@@ -214,6 +214,9 @@ i915_param_named_unsafe(request_timeout_ms, uint, 0600,
 			"Default request/fence/batch buffer expiration timeout.");
 #endif
 
+i915_param_named(share_dplls, bool, 0400,
+	"Share dplls between ports with same HW states (default:true)");
+
 i915_param_named_unsafe(lmem_size, uint, 0400,
 			"Set the lmem size(in MiB) for each region. (default: 0, all memory)");
 i915_param_named_unsafe(lmem_bar_size, uint, 0400,
diff --git a/drivers/gpu/drm/i915/i915_params.h b/drivers/gpu/drm/i915/i915_params.h
index 2733cb6cfe09..658237774bcf 100644
--- a/drivers/gpu/drm/i915/i915_params.h
+++ b/drivers/gpu/drm/i915/i915_params.h
@@ -84,6 +84,7 @@ struct drm_printer;
 	param(bool, verbose_state_checks, true, 0) \
 	param(bool, nuclear_pageflip, false, 0400) \
 	param(bool, enable_dp_mst, true, 0600) \
+	param(bool, share_dplls, true, 0400) \
 	param(bool, enable_gvt, false, IS_ENABLED(CONFIG_DRM_I915_GVT) ? 0400 : 0)
 
 #define MEMBER(T, member, ...) T member;
-- 
2.44.0

