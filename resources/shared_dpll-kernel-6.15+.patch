From 767c682086ccf3c0f9789d13743da7c38a4a4fe5 Mon Sep 17 00:00:00 2001
From: Arshad Mehmood <arshad.mehmood@intel.com>
Date: Tue, 3 Jun 2025 14:18:06 +0800
Subject: [PATCH] dpll: Provide a command line param to config if PLLs can be
 shared

By default, PLLs can be shared between CRTCs to conserve power if their
HW states match. However, there are circumstances like in SW genlock
case where we want PLLs to not be shared so that individual CRTC vsyncs
can be synchronized. This patch provides a command line flag called
share_dplls through which the user can decide if they want to share
dplls between multiple CRTCs or not. By default, it is set to true so
that there is no change in past behavior if this flag is not
provided.

Signed-off-by: Satyeshwar Singh <satyeshwar.singh@intel.com>
---
 drivers/gpu/drm/i915/display/intel_display_params.c | 5 +++++
 drivers/gpu/drm/i915/display/intel_display_params.h | 1 +
 drivers/gpu/drm/i915/display/intel_dpll_mgr.c       | 7 ++++++-
 3 files changed, 12 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/display/intel_display_params.c b/drivers/gpu/drm/i915/display/intel_display_params.c
index c4f1ab43fc0c..0c52acd63889 100644
--- a/drivers/gpu/drm/i915/display/intel_display_params.c
+++ b/drivers/gpu/drm/i915/display/intel_display_params.c
@@ -133,6 +133,11 @@ intel_display_param_named_unsafe(enable_dmc_wl, int, 0400,
 	"(-1=use per-chip default, 0=disabled, 1=enabled, 2=match any register, 3=always locked) "
 	"Default: -1");
 
+intel_display_param_named_unsafe(share_dplls, bool, 0400,
+	"Share dplls between ports with same HW states "
+	"(0=disabled, 1=enabled) "
+	"(Default: 1)");
+
 __maybe_unused
 static void _param_print_bool(struct drm_printer *p, const char *driver_name,
 			      const char *name, bool val)
diff --git a/drivers/gpu/drm/i915/display/intel_display_params.h b/drivers/gpu/drm/i915/display/intel_display_params.h
index 5317138e6044..aacdad7318f7 100644
--- a/drivers/gpu/drm/i915/display/intel_display_params.h
+++ b/drivers/gpu/drm/i915/display/intel_display_params.h
@@ -48,6 +48,7 @@ struct drm_printer;
 	param(bool, psr_safest_params, false, 0400) \
 	param(bool, enable_psr2_sel_fetch, true, 0400) \
 	param(int, enable_dmc_wl, -1, 0400) \
+	param(bool, share_dplls, true, 0400) \
 
 #define MEMBER(T, member, ...) T member;
 struct intel_display_params {
diff --git a/drivers/gpu/drm/i915/display/intel_dpll_mgr.c b/drivers/gpu/drm/i915/display/intel_dpll_mgr.c
index c825a507b905..b96315adf8fc 100644
--- a/drivers/gpu/drm/i915/display/intel_dpll_mgr.c
+++ b/drivers/gpu/drm/i915/display/intel_dpll_mgr.c
@@ -365,11 +365,16 @@ intel_find_shared_dpll(struct intel_atomic_state *state,
 	struct intel_shared_dpll_state *shared_dpll;
 	struct intel_shared_dpll *unused_pll = NULL;
 	enum intel_dpll_id id;
+	int total_plls = 0;
 
 	shared_dpll = intel_atomic_get_shared_dpll_state(&state->base);
 
 	drm_WARN_ON(display->drm, dpll_mask & ~dpll_mask_all);
 
+	for_each_set_bit(id, &dpll_mask, I915_NUM_PLLS) {
+		total_plls++;
+	}
+
 	for_each_set_bit(id, &dpll_mask, fls(dpll_mask_all)) {
 		struct intel_shared_dpll *pll;
 
@@ -384,7 +389,7 @@ intel_find_shared_dpll(struct intel_atomic_state *state,
 			continue;
 		}
 
-		if (memcmp(dpll_hw_state,
+		if ((display->params.share_dplls || total_plls == 1) && memcmp(dpll_hw_state,
 			   &shared_dpll[pll->index].hw_state,
 			   sizeof(*dpll_hw_state)) == 0) {
 			drm_dbg_kms(display->drm,
-- 
2.43.0

